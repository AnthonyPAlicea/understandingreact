<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Understanding React</title>
</head>

<body>
    <main id="app"></main>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <!-- React Component with JSX -->
    <script type="text/babel" data-type="module">
        (async () => {
            // Dynamic imports for React 19
            const React = await import("https://esm.sh/react@19/?dev");
            const ReactDOM = await import("https://esm.sh/react-dom@19/client?dev");

            const { useState, use, Suspense } = React.default;
            const { createRoot } = ReactDOM.default;

            const promiseCache = new Map();

            async function fetchBioWithDelay(person) {
                const delay = person === 'Bob' ? 2000 : 200;
                
                return new Promise(resolve => {
                    setTimeout(() => {
                        console.log("Fetching bio for " + person + " with delay of " + delay + "ms");
                        resolve('This is ' + person + 'â€™s bio.');
                    }, delay);
                })
            }

            async function fetchBio(person) {
                if (promiseCache.has(person)) {
                    return promiseCache.get(person);
                }
                const promise = fetchBioWithDelay(person);
                promiseCache.set(person, promise);
                return promise;
            }

            function Bio({ person }) {
                const bio = use(fetchBio(person));
                return <p><i>{bio}</i></p>;
            }

            function App() {
                const [person, setPerson] = useState('Alice');

                return (
                    <>
                        <select value={person} onChange={e => {
                            setPerson(e.target.value);
                        }}>
                            <option value="Alice">Alice</option>
                            <option value="Bob">Bob</option>
                            <option value="Taylor">Taylor</option>
                        </select>
                        <hr />
                        <Suspense fallback={<p><i>Loading...</i></p>}>
                            <Bio person={person} />
                        </Suspense>
                    </>
                );
            }

            // Ensure DOM is ready, then render
            const rootElement = document.getElementById('app');
            const root = createRoot(rootElement);
            root.render(<App />);
        })();
    </script>
</body>

</html>